{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectDestructuringEmpty from \"/home/thamyrismila/Documentos/Projetos/nlw05/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/thamyrismila/Documentos/Projetos/nlw05/src/pages/episodes/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport styles from '../episode.module.scss';\nimport { usePlayer } from '../../contexts/PlayerContext';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer();\n\n  _objectDestructuringEmpty(_usePlayer);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar epis\\xF3dio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Episode, \"90tB3ZQDMzqPLOU28xq7LbjGexs=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/thamyrismila/Documentos/Projetos/nlw05/src/pages/episodes/[slug].tsx"],"names":["Image","Link","styles","usePlayer","Episode","episode","thumbnailContainer","thumbnail","title","members","publishedAd","durationAsString","description","__html"],"mappings":";;;;;;AAEA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAOA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,SAAT,QAA0B,8BAA1B;;AAkBA,eAAe,SAASC,OAAT,OAA0C;AAAA;;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;;AAAA,mBAC1CF,SAAS,EADiC;;AAAA;;AAGpD,sBACG;AAAK,IAAA,SAAS,EAAED,MAAM,CAACG,OAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACI,kBAAvB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,iCACG;AAAK,YAAA,GAAG,EAAC,iBAAT;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,KAAD;AACC,QAAA,KAAK,EAAE,GADR;AAEC,QAAA,MAAM,EAAE,GAFT;AAGC,QAAA,GAAG,EAAED,OAAO,CAACE,SAHd;AAIC,QAAA,SAAS,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,cANJ,eAYK;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACA;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAZL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAkBI;AAAA,8BACI;AAAA,kBAAKF,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOH,OAAO,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAOJ,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAOL,OAAO,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAyBC;AACG,MAAA,SAAS,EAAET,MAAM,CAACU,WADrB;AAEG,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAACR,OAAO,CAACO;AAAjB;AAF5B;AAAA;AAAA;AAAA;AAAA,YAzBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAkCJ;;GArCuBR,O;UACTD,S;;;KADSC,O","sourcesContent":["import { format, parseISO} from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR'\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport {useRouter} from 'next/router' \nimport {GetStaticPaths, GetStaticProps} from 'next';\n\nimport {api} from '../../services/api'; \nimport {convertDurationToTimeString} from '../../utils/convertDurationToTimeString';\n\nimport styles from '../episode.module.scss';\nimport { useContext } from 'react';\nimport { usePlayer } from '../../contexts/PlayerContext';\n\ntype Episode = {\n    id: string;\n    title: string;\n    thumbnail: string;\n    members: string;\n    duration: number;\n    durationAsString: string;\n    url: string;\n    publishedAd: string;\n    description: string;\n};\n\ntype EpisodeProps = { \n    episode: Episode;\n  }\n\nexport default function Episode({episode}: EpisodeProps) {\n   const { } = usePlayer();\n\n     return (\n        <div className={styles.episode}>\n            <div className={styles.thumbnailContainer}>\n                <Link href=\"/\">\n                <button type=\"button\">\n                   <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\n                </button>\n                </Link>\n                <Image \n                 width={700} \n                 height={160} \n                 src={episode.thumbnail}  \n                 objectFit=\"cover\"\n                 />      \n                 <button type=\"button\">\n                 <img src=\"/play.svg\" alt=\"Tocar episÃ³dio\"/>\n                 </button>\n            </div>\n            \n            <header>\n                <h1>{episode.title}</h1>\n                <span>{episode.members}</span>\n                <span>{episode.publishedAd}</span>\n                <span>{episode.durationAsString}</span> \n            </header>\n \n         <div \n            className={styles.description}\n            dangerouslySetInnerHTML={{ __html:episode.description }}\n            />\n            \n        \n        </div>\n    )\n}\n\n\n\nexport const getStaticPaths: GetStaticPaths= async () => {\n    const {data} = await api.get('episodes',{\n        params:{\n        _limit: 12,\n        _sort: 'published_at',\n        _order: 'desc'\n      }\n     \n    })\n\n    const paths = data.map(episode => {\n        return {\n        params: {\n            slug: episode.id\n        }\n\n        }\n    })\n\n    return {\n        paths,\n        fallback: 'blocking'\n    }\n    // incrementar static regeneration\n}\n  \nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n  const { data } = await api.get(`/episodes/${slug}`)\n\n  const episode =  {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt:format(parseISO(data.published_at), 'd MMM yy', {locale:ptBR }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n\n  };\n\n\n    return{\n        props: {\n            episode,\n        },\n        revalidate: 60 * 60 * 24, // 24 horas \n    }\n}"]},"metadata":{},"sourceType":"module"}