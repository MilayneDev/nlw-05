{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thamyrismila/Documentos/Projetos/nlw/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nimport styles from '../episode.module.scss';\nexport default function Episode({\n  episode\n}) {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar epis\\xF3dio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [episode.members, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const paths = data.map(episode => {\n    return {\n      params: {\n        slug: dat.id\n      }\n    };\n  });\n  return {\n    paths: [],\n    fallback: 'blocking'\n  }; // incrementar static regeneration\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24 // 24 horas \n\n  };\n};","map":{"version":3,"sources":["/home/thamyrismila/Documentos/Projetos/nlw/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","Image","Link","useRouter","api","convertDurationToTimeString","styles","Episode","episode","router","isFallback","thumbnailContainer","thumbnail","title","members","publishedAt","durationAsString","description","__html","getStaticPaths","data","get","params","_limit","_sort","_order","paths","map","slug","dat","id","fallback","getStaticProps","ctx","published_at","locale","duration","Number","file","url","props","revalidate"],"mappings":"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","sourcesContent":["import { format, parseISO} from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR'\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport {useRouter} from 'next/router' \nimport {GetStaticPaths, GetStaticProps} from 'next';\n\nimport {api} from '../../services/api'; \nimport {convertDurationToTimeString} from '../../utils/convertDurationToTimeString';\n\nimport styles from '../episode.module.scss';\n\ntype Episode = {\n    id: string;\n    title: string;\n    thumbnail: string;\n    members: string;\n    duration: number;\n    durationAsString: string;\n    url: string;\n    publishedAd: string;\n    description: string;\n};\n\ntype EpisodeProps = {\n    episode: Episode;\n  }\n\nexport default function Episode({episode}: EpisodeProps) {\n     const router = useRouter();\n\n     if (router.isFallback) {\n         return <p>Carregando...</p>\n     }\n\n     return (\n        <div className={styles.episode}>\n            <div className={styles.thumbnailContainer}>\n                <Link href=\"/\">\n                <button type=\"button\">\n                   <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\n                </button>\n                </Link>\n                <Image \n                 width={700} \n                 height={160} \n                 src={episode.thumbnail}  \n                 objectFit=\"cover\"\n                 />      \n                 <button type=\"button\">\n                 <img src=\"/play.svg\" alt=\"Tocar episÃ³dio\"/>\n                 </button>\n            </div>\n            \n            <header>\n                <h1>{episode.title}</h1>\n                <span>{episode.members} </span>\n                <span>{episode.publishedAt}</span>\n                <span>{episode.durationAsString}</span> \n            </header>\n \n         <div \n            className={styles.description}\n            dangerouslySetInnerHTML={{ __html:episode.description }}\n            />\n            \n        \n        </div>\n    )\n}\n\n\n\nexport const getStaticPaths: GetStaticPaths= async () => {\n    const {data} = await api.get('episodes',{\n        params:{\n        _limit: 12,\n        _sort: 'published_at',\n        _order: 'desc'\n      }\n     \n    })\n\n    const paths = data.map(episode => {\n        return {\n        params: {\n            slug: dat.id\n        }\n\n        }\n    })\n\n    return {\n        paths:[],\n        fallback: 'blocking'\n    }\n    // incrementar static regeneration\n}\n  \nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n  const { data } = await api.get(`/episodes/${slug}`)\n\n  const episode =  {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt:format(parseISO(data.published_at), 'd MMM yy', {locale:ptBR }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n\n  };\n\n\n    return{\n        props: {\n            episode,\n        },\n        revalidate: 60 * 60 * 24, // 24 horas \n    }\n}"]},"metadata":{},"sourceType":"module"}