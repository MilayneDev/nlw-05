{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thamyrismila/Documentos/Projetos/nlw/src/pages/index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from './home.module.scss';\nexport default function Home({\n  episodes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.latestEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos lan\\xE7amentos \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.allEpisodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice;\n  return {\n    props: {\n      episodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/home/thamyrismila/Documentos/Projetos/nlw/src/pages/index.tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","styles","Home","episodes","homepage","latestEpisodes","allEpisodes","getStaticProps","data","get","params","_limit","_sort","_order","map","episode","id","title","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","slice","props","revalidate"],"mappings":";;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,2BAAT,QAA4C,sCAA5C;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAmBA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAqC;AAClD,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACG,QAAvB;AAAA,4BACC;AAAS,MAAA,SAAS,EAAEH,MAAM,CAACI,cAA3B;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAGC;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eASC;AAAS,MAAA,SAAS,EAAEJ,MAAM,CAACK;AAA3B;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMT,GAAG,CAACU,GAAJ,CAAQ,UAAR,EAAmB;AACvCC,IAAAA,MAAM,EAAC;AACLC,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,KAAK,EAAE,cAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH;AADgC,GAAnB,CAArB;AASA,QAAMV,QAAQ,GAAGK,IAAI,CAACM,GAAL,CAASC,OAAO,IAAG;AAClC,WAAO;AACLC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADP;AAELC,MAAAA,KAAK,EAAEF,OAAO,CAACE,KAFV;AAGLC,MAAAA,SAAS,EAAEH,OAAO,CAACG,SAHd;AAILC,MAAAA,OAAO,EAAEJ,OAAO,CAACI,OAJZ;AAKLC,MAAAA,WAAW,EAACxB,MAAM,CAACC,QAAQ,CAACkB,OAAO,CAACM,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAACC,QAAAA,MAAM,EAACxB;AAAR,OAA7C,CALb;AAMLyB,MAAAA,QAAQ,EAAEC,MAAM,CAACT,OAAO,CAACU,IAAR,CAAaF,QAAd,CANX;AAOLG,MAAAA,gBAAgB,EAAE1B,2BAA2B,CAACwB,MAAM,CAACT,OAAO,CAACU,IAAR,CAAaF,QAAd,CAAP,CAPxC;AAQLI,MAAAA,WAAW,EAAEZ,OAAO,CAACY,WARhB;AASLC,MAAAA,GAAG,EAAEb,OAAO,CAACU,IAAR,CAAaG;AATb,KAAP;AAaD,GAdgB,CAAjB;AAgBA,QAAMvB,cAAc,GAAEF,QAAQ,CAAC0B,KAAT,CAAe,CAAf,EAAiB,CAAjB,CAAtB;AACA,QAAMvB,WAAW,GAAEH,QAAQ,CAAC0B,KAA5B;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL3B,MAAAA;AADK,KADF;AAIL4B,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJjB,GAAP;AAMD,CAlCM","sourcesContent":["import { GetStaticProps } from 'next';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\n\nimport styles from './home.module.scss';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  description: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAd: string;\n}\n\ntype HomeProps = {\n  episodes: Episode[];\n\n}\n\nexport default function Home({episodes}: HomeProps) {\n  return (\n    <div className={styles.homepage}>\n     <section className={styles.latestEpisodes}> \n      <h2>Últimos lançamentos </h2>\n\n      <ul>\n\n      </ul>\n     </section>\n\n     <section className={styles.allEpisodes}>\n     \n     </section>\n    </div>\n    \n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const {data} = await api.get('episodes',{\n   params:{\n     _limit: 12,\n     _sort: 'published_at',\n     _order: 'desc'\n   }\n\n  })\n\n  const episodes = data.map(episode =>{\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt:format(parseISO(episode.published_at), 'd MMM yy', {locale:ptBR }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n\n    };\n\n  })\n  \n  const latestEpisodes= episodes.slice(0,2); \n  const allEpisodes= episodes.slice\n  return {\n    props: {\n      episodes,\n    },\n    revalidate: 60 * 60 * 8,\n   }\n}"]},"metadata":{},"sourceType":"module"}