{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/thamyrismila/Documentos/Projetos/nlw/src/pages/episodes/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: router.query.slug\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Episode, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/thamyrismila/Documentos/Projetos/nlw/src/pages/episodes/[slug].tsx"],"names":["useRouter","Episode","episode","router","query","slug"],"mappings":";;;;;AAGA,SAASA,SAAT,QAA0B,aAA1B;;AAqBA,eAAe,SAASC,OAAT,OAA2C;AAAA;;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AACtD,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,sBACI;AAAA,cAAKG,MAAM,CAACC,KAAP,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GANuBJ,O;UACLD,S;;;KADKC,O","sourcesContent":["import { format, parseISO} from 'data-fins';\nimport ptBR from 'date-fns/lacale/pt-BR'\nimport { GetStaticProps } from 'next';\nimport { useRouter } from 'next/router'\n\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\ntype Episode = {\n    id: string;\n    title: string;\n    thumbnail: string;\n    members: string;\n    duration: number;\n    durationAsString: string;\n    url: string;\n    publishedAd: string;\n    description: string;\n};\n\ntype EpisodeProps = {\n    episode: Episode;\n }\n\nexport default function Episode ({episode}: EpisodeProps) {\n    const router = useRouter ();\n\n    return (\n        <h1>{router.query.slug}</h1>\n    )\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n  const { data } = await api.get(`/episodes/${slug}`)\n\n  const episode =  {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt:format(parseISO(data.published_at), 'd MMM yy', {locale:ptBR }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n\n  };\n\n\n    return{\n        props: {\n            episode,\n        },\n        revalidate: 60 * 60 * 24, // 24 horas \n    }\n}"]},"metadata":{},"sourceType":"module"}