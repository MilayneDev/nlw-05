{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thamyrismila/Documentos/Projetos/nlw/src/pages/index.tsx\";\nimport Image from 'next/image';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from './home.module.scss';\nexport default function Home({\n  latestEpisodes,\n  allEpisodes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.latestEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos lan\\xE7amentos \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: latestEpisodes.map(episode => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: episode.thumbnail,\n              alt: episode.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.episodeDetails,\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"\",\n                children: episode.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: episode.members\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.durationAsString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"play-green.svg\",\n                alt: \"Tocar epis\\xF3dio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, episode.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.allEpisodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/home/thamyrismila/Documentos/Projetos/nlw/src/pages/index.tsx"],"names":["Image","format","parseISO","ptBR","api","convertDurationToTimeString","styles","Home","latestEpisodes","allEpisodes","homepage","map","episode","thumbnail","title","episodeDetails","members","publishedAt","durationAsString","id","getStaticProps","data","get","params","_limit","_sort","_order","episodes","published_at","locale","duration","Number","file","description","url","slice","length","props","revalidate"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport Image from  'next/image';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\n\nimport styles from './home.module.scss';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  description: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAd: string;\n}\n\ntype HomeProps = {\n  latestEpisodes: Episode[];\n  allEpisodes: Episode[];\n}\n\nexport default function Home({latestEpisodes, allEpisodes }: HomeProps) {\n  return (\n    <div className={styles.homepage}>\n     <section className={styles.latestEpisodes}> \n      <h2>Últimos lançamentos </h2>\n\n      <ul>\n       {latestEpisodes.map(episode => {\n\n          return(\n            <li key={episode.id}>\n              <Image src={episode.thumbnail} alt={episode.title}/>\n\n              <div className={styles.episodeDetails}>\n                <a href=\"\">{episode.title}</a>\n                <p>{episode.members}</p>\n                <span>{episode.publishedAt}</span>\n                <span>{episode.durationAsString}</span>\n              </div>\n              <button type=\"button\">\n                <img src=\"play-green.svg\" alt=\"Tocar episódio\"/>\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n     </section>\n\n     <section className={styles.allEpisodes}>\n     \n     </section>\n    </div>\n    \n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const {data} = await api.get('episodes',{\n   params:{\n     _limit: 12,\n     _sort: 'published_at',\n     _order: 'desc'\n   }\n\n  })\n\n  const episodes = data.map(episode =>{\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt:format(parseISO(episode.published_at), 'd MMM yy', {locale:ptBR }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n\n    };\n\n  })\n  \n  const latestEpisodes = episodes.slice(0,2); \n  const allEpisodes = episodes.slice(2, episodes.length);\n\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes,\n    },\n    revalidate: 60 * 60 * 8,\n   }\n}"]},"metadata":{},"sourceType":"module"}