{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thamyrismila/Documentos/Projetos/nlw05/src/components/Player/index.tsx\";\nimport Image from 'next/image';\nimport { useRef, useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { usePlayer } from '../../contexts/PlayerContext';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  var _episode$duration;\n\n  const audioRef = useRef(null);\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    isLooping,\n    isShuffling,\n    togglePlay,\n    toggleLoop,\n    toggleShuffle,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    hasPrevious\n  } = usePlayer();\n  useEffect(() => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', () => {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  function handleEpisodeEnded() {\n    if (hasNext) {}\n  }\n\n  const episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            max: episode.duration,\n            value: progress,\n            onChange: handleSeek,\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        loop: isLooping,\n        autoPlay: true,\n        onEnded: handleEpisodeEnded,\n        onPlay: () => setPlayingState(true),\n        onPause: () => setPlayingState(false),\n        onLoadMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length == 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 18\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar proxima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/home/thamyrismila/Documentos/Projetos/nlw05/src/components/Player/index.tsx"],"names":["Image","useRef","useEffect","useState","Slider","usePlayer","styles","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","togglePlay","toggleLoop","toggleShuffle","setPlayingState","playNext","playPrevious","hasNext","hasPrevious","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","handleSeek","amount","handleEpisodeEnded","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from 'next/image';\nimport { useRef, useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\n\nimport 'rc-slider/assets/index.css';\n\nimport { usePlayer } from '../../contexts/PlayerContext';\n\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nexport function Player(){\nconst audioRef= useRef<HTMLAudioElement>(null);\nconst [progress, setProgress] = useState(0);\n\nconst {\n  episodeList,\n  currentEpisodeIndex,\n  isPlaying,\n  isLooping,\n  isShuffling,\n  togglePlay,\n  toggleLoop,\n  toggleShuffle,\n  setPlayingState,\n  playNext,\n  playPrevious,\n  hasNext,\n  hasPrevious\n } = usePlayer();\n\nuseEffect(() => {\n  if (!audioRef.current) {\n    return;\n  }\n\n   if (isPlaying){\n     audioRef.current.play();\n   } else {\n     audioRef.current.pause();\n   }\n}, [isPlaying])\n\nfunction setupProgressListener() {\n   audioRef.current.currentTime = 0;\n\n   audioRef.current.addEventListener('timeupdate', () => {\n     setProgress(Math.floor(audioRef.current.currentTime)); \n   });\n}\n\nfunction handleSeek (amount: number) {\n  audioRef.current.currentTime = amount;\n  setProgress(amount);\n}\n\nfunction handleEpisodeEnded(){\n  if (hasNext){\n     \n  }\n}\n\n\nconst episode = episodeList[currentEpisodeIndex]\n\n  return (\n      <div className={styles.playerContainer}> \n        <header>\n          <img src=\"/playing.svg\" alt=\"Tocando agora\" />\n          <strong>Tocando agora </strong>\n        </header>\n\n        { episode ? (\n          <div className={styles.currentEpisode}>\n              <Image \n              width={592}\n              height={592}\n              src= {episode.thumbnail} \n              objectFit=\"cover\" \n              />\n              <strong>{episode.title}</strong>\n              <span>{episode.members}</span>\n          </div>\n        ) : (\n          <div className={styles.emptyPlayer}>\n           <strong>Selecione um podcast para ouvir</strong>\n        </div>\n        \n        ) }\n          <footer className={!episode ? styles.empty : ''}>\n          <div className= {styles.progress}>\n            <span>{convertDurationToTimeString(progress)}</span>\n            <div className={styles.slider}>\n              {episode ? (\n                <Slider\n                max={episode.duration}\n                value={progress}\n                onChange={handleSeek}\n                trackStyle={{ backgroundColor: '#04d361' }}\n                railStyle={{ backgroundColor: '#9f75ff' }}\n                handleStyle={{ borderColor: '#04d361', borderWidth:4 }}\n                />\n              ) : (\n                <div className={styles.emptySlider}/>\n                )}\n              </div>\n              <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\n           </div>\n\n           { episode &&(\n             <audio\n              src={episode.url}\n              ref={audioRef}\n              loop={isLooping}\n              autoPlay\n              onEnded={handleEpisodeEnded}\n              onPlay={() => setPlayingState(true)}\n              onPause={() => setPlayingState(false)}\n              onLoadMetadata= {setupProgressListener}\n             />\n           )} \n\n\n         \n          <div className={styles.buttons}>\n            <button\n             type=\"button\" \n             disabled={!episode || episodeList.length == 1} \n             onClick={toggleShuffle}\n             className= {isShuffling ? styles.isActive : ''}\n             >\n              <img src=\"/shuffle.svg\" alt=\"Embaralhar\"/>\n             </button>\n             <button type=\"button\" onClick={playPrevious} disabled={!episode || !hasPrevious }>\n              <img src=\"/play-previous.svg\" alt=\"Tocar anterior\"/>\n             </button>\n             <button\n              type=\"button\"\n              className={styles.playButton} \n              disabled={!episode}\n              onClick={togglePlay}\n              \n             >\n              { isPlaying\n               ? <img src=\"/pause.svg\" alt=\"Tocar\"/> \n               : <img src=\"/play.svg\" alt=\"Tocar\"/>}\n             </button>\n             <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\n              <img src=\"/play-next.svg\" alt=\"Tocar proxima\"/>\n             </button>\n            <button\n              type=\"button\" \n              disabled={!episode}\n              onClick={toggleLoop}\n              className={isLooping ? styles.isActive : ''}\n            >\n\n              <img src=\"/repeat.svg\" alt=\"Repetir\"/>\n             </button>\n           </div>\n        </footer>\n      </div> \n  );\n}"]},"metadata":{},"sourceType":"module"}