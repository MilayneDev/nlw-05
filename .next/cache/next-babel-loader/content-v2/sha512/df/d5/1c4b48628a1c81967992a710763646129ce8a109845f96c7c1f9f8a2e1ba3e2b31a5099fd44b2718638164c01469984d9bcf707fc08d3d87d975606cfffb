{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thamyrismila/Documentos/Projetos/nlw/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from 'data-fins';\nimport ptBR from 'date-fns/lacale/pt-BR';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport default function Episode({\n  episode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"class \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24 // 24 horas \n\n  };\n};","map":{"version":3,"sources":["/home/thamyrismila/Documentos/Projetos/nlw/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","Episode","episode","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","title","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAgC,WAAhC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAIA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAoBA,eAAe,SAASC,OAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA2C;AAEtD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AAED,OAAO,MAAMC,cAA8B,GAAE,YAAY;AACrD,SAAO;AACHC,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMX,GAAG,CAACY,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAvB;AAEA,QAAMN,OAAO,GAAI;AACfU,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADM;AAEfC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAFG;AAGfC,IAAAA,SAAS,EAAEJ,IAAI,CAACI,SAHD;AAIfC,IAAAA,OAAO,EAAEL,IAAI,CAACK,OAJC;AAKfC,IAAAA,WAAW,EAACpB,MAAM,CAACC,QAAQ,CAACa,IAAI,CAACO,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAACC,MAAAA,MAAM,EAACpB;AAAR,KAA1C,CALH;AAMfqB,IAAAA,QAAQ,EAAEC,MAAM,CAACV,IAAI,CAACW,IAAL,CAAUF,QAAX,CAND;AAOfG,IAAAA,gBAAgB,EAAEtB,2BAA2B,CAACoB,MAAM,CAACV,IAAI,CAACW,IAAL,CAAUF,QAAX,CAAP,CAP9B;AAQfI,IAAAA,WAAW,EAAEb,IAAI,CAACa,WARH;AASfC,IAAAA,GAAG,EAAEd,IAAI,CAACW,IAAL,CAAUG;AATA,GAAjB;AAcE,SAAM;AACFC,IAAAA,KAAK,EAAE;AACHvB,MAAAA;AADG,KADL;AAIFwB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAJpB,CAIwB;;AAJxB,GAAN;AAMH,CAxBM","sourcesContent":["import { format, parseISO} from 'data-fins';\nimport ptBR from 'date-fns/lacale/pt-BR'\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport { useRouter } from 'next/router'\n\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nimport styles from './episode.module.scss';\n\ntype Episode = {\n    id: string;\n    title: string;\n    thumbnail: string;\n    members: string;\n    duration: number;\n    durationAsString: string;\n    url: string;\n    publishedAd: string;\n    description: string;\n};\n\ntype EpisodeProps = {\n    episode: Episode;\n }\n\nexport default function Episode ({episode}: EpisodeProps) {\n\n    return (\n        <div>class </div>\n    )\n}\n\nexport const getStaticPaths: GetStaticPaths= async () => {\n    return {\n        paths: [],\n        fallback: 'blocking'\n    }\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n  const { data } = await api.get(`/episodes/${slug}`)\n\n  const episode =  {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt:format(parseISO(data.published_at), 'd MMM yy', {locale:ptBR }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n\n  };\n\n\n    return{\n        props: {\n            episode,\n        },\n        revalidate: 60 * 60 * 24, // 24 horas \n    }\n}"]},"metadata":{},"sourceType":"module"}