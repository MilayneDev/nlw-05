{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/thamyrismila/Documentos/Projetos/nlw/src/pages/index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from './home.module.scss';\nexport default function Home({\n  latesEpisodes,\n  allEpisodes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.latestEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos lan\\xE7amentos \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: latest.map(episode => {\n          return;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.allEpisodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["/home/thamyrismila/Documentos/Projetos/nlw/src/pages/index.tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","styles","Home","latesEpisodes","allEpisodes","homepage","latestEpisodes","latest","map","episode","getStaticProps","data","get","params","_limit","_sort","_order","episodes","id","title","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","slice","length","props","revalidate"],"mappings":";;AACA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,2BAAT,QAA4C,sCAA5C;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAmBA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAd,EAAwD;AACrE,sBACE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACI,QAAvB;AAAA,4BACC;AAAS,MAAA,SAAS,EAAEJ,MAAM,CAACK,cAA3B;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAGC;AAAA,kBACGC,MAAM,CAACC,GAAP,CAAWC,OAAO,IAAI;AACrB;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAWC;AAAS,MAAA,SAAS,EAAER,MAAM,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,YAXD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;AAED,OAAO,MAAMM,cAA8B,GAAG,YAAY;AACxD,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMZ,GAAG,CAACa,GAAJ,CAAQ,UAAR,EAAmB;AACvCC,IAAAA,MAAM,EAAC;AACLC,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,KAAK,EAAE,cAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH;AADgC,GAAnB,CAArB;AASA,QAAMC,QAAQ,GAAGN,IAAI,CAACH,GAAL,CAASC,OAAO,IAAG;AAClC,WAAO;AACLS,MAAAA,EAAE,EAAET,OAAO,CAACS,EADP;AAELC,MAAAA,KAAK,EAAEV,OAAO,CAACU,KAFV;AAGLC,MAAAA,SAAS,EAAEX,OAAO,CAACW,SAHd;AAILC,MAAAA,OAAO,EAAEZ,OAAO,CAACY,OAJZ;AAKLC,MAAAA,WAAW,EAAC1B,MAAM,CAACC,QAAQ,CAACY,OAAO,CAACc,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAACC,QAAAA,MAAM,EAAC1B;AAAR,OAA7C,CALb;AAML2B,MAAAA,QAAQ,EAAEC,MAAM,CAACjB,OAAO,CAACkB,IAAR,CAAaF,QAAd,CANX;AAOLG,MAAAA,gBAAgB,EAAE5B,2BAA2B,CAAC0B,MAAM,CAACjB,OAAO,CAACkB,IAAR,CAAaF,QAAd,CAAP,CAPxC;AAQLI,MAAAA,WAAW,EAAEpB,OAAO,CAACoB,WARhB;AASLC,MAAAA,GAAG,EAAErB,OAAO,CAACkB,IAAR,CAAaG;AATb,KAAP;AAaD,GAdgB,CAAjB;AAgBA,QAAMxB,cAAc,GAAGW,QAAQ,CAACc,KAAT,CAAe,CAAf,EAAiB,CAAjB,CAAvB;AACA,QAAM3B,WAAW,GAAGa,QAAQ,CAACc,KAAT,CAAe,CAAf,EAAkBd,QAAQ,CAACe,MAA3B,CAApB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL3B,MAAAA,cADK;AAELF,MAAAA;AAFK,KADF;AAKL8B,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AALjB,GAAP;AAOD,CApCM","sourcesContent":["import { GetStaticProps } from 'next';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR'\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\n\nimport styles from './home.module.scss';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  description: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAd: string;\n}\n\ntype HomeProps = {\n  latesEpisodes: Episode[];\n  allEpisodes: Episode[];\n}\n\nexport default function Home({latesEpisodes, allEpisodes }: HomeProps) {\n  return (\n    <div className={styles.homepage}>\n     <section className={styles.latestEpisodes}> \n      <h2>Últimos lançamentos </h2>\n\n      <ul>\n        {latest.map(episode => {\n          return\n        })}\n      </ul>\n     </section>\n\n     <section className={styles.allEpisodes}>\n     \n     </section>\n    </div>\n    \n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const {data} = await api.get('episodes',{\n   params:{\n     _limit: 12,\n     _sort: 'published_at',\n     _order: 'desc'\n   }\n\n  })\n\n  const episodes = data.map(episode =>{\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt:format(parseISO(episode.published_at), 'd MMM yy', {locale:ptBR }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n\n    };\n\n  })\n  \n  const latestEpisodes = episodes.slice(0,2); \n  const allEpisodes = episodes.slice(2, episodes.length);\n\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes,\n    },\n    revalidate: 60 * 60 * 8,\n   }\n}"]},"metadata":{},"sourceType":"module"}